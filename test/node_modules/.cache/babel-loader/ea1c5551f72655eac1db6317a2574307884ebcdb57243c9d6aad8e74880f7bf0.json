{"ast":null,"code":"var _jsxFileName = \"C:\\\\react_test\\\\test\\\\src\\\\components\\\\TaskItem.js\",\n  _s = $RefreshSig$();\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../actions/todos\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: white;\n  width: 80%;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  letter-spacing: 0.05em;\n  padding: 0 20px;\n`;\n_c = Container;\nconst CheckBox = styled.input.attrs({\n  type: 'checkbox'\n})`\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n_c2 = CheckBox;\nlet Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  background-color: inherit;\n  border: 2px solid #333;\n  width: 300px;\n  font-size: 16px;\n  letter-spacing: 0.05em;\n\n  img {\n    cursor: pointer;\n  }\n\n  &::placeholder {\n    color: #333;\n  }\n`;\n\n/*const TaskName = styled.div`\n  flex-grow: 1;\n  margin: 0 20px;\n`;\n*/\n_c3 = Input;\nconst Button = styled.div`\n  background-color: #bebebe;\n  border: none;\n  border-radius: 3px;\n  padding: 5px 10px;\n  width: min-content;\n  color: white;\n  letter-spacing: 0.05em;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #F5727E;\n  }\n`;\n_c4 = Button;\nfunction TaskItem(props) {\n  _s();\n  const dispatch = useDispatch();\n  const [newTask, setnewTask] = useState(props.task.taskName);\n\n  //setnewTask(props.task.taskName);\n\n  const handleChange = event => {\n    setnewTask(event.target.value);\n  };\n  const finishChange = event => {\n    if (newTask === \"\") {\n      setnewTask(props.task.taskName);\n      window.alert('任務不可空白');\n      return;\n    }\n    dispatch(actions.editTask(props.task.idx, newTask));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n      type: \"checkbox\",\n      checked: props.task.isCompleted,\n      onChange: () => dispatch(actions.toggleTask(props.task.idx))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\"\n      //placeholder={props.task.taskName}\n      ,\n      value: newTask,\n      onChange: handleChange,\n      onBlur: finishChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => dispatch(actions.deleteTask(props.task.idx)),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"AyHAT+IQINhcfoHLscQWQCV0lsY=\", false, function () {\n  return [useDispatch];\n});\n_c5 = TaskItem;\nexport default TaskItem;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"CheckBox\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"Button\");\n$RefreshReg$(_c5, \"TaskItem\");","map":{"version":3,"names":["styled","useDispatch","actions","useState","Container","div","CheckBox","input","attrs","type","Input","Button","TaskItem","props","dispatch","newTask","setnewTask","task","taskName","handleChange","event","target","value","finishChange","window","alert","editTask","idx","isCompleted","toggleTask","deleteTask"],"sources":["C:/react_test/test/src/components/TaskItem.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport * as actions from \"../actions/todos\";\nimport { useState } from \"react\";\n\n\nconst Container = styled.div`\n  background-color: white;\n  width: 80%;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  letter-spacing: 0.05em;\n  padding: 0 20px;\n`;\n\nconst CheckBox = styled.input.attrs({ type: 'checkbox' })`\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nlet Input = styled.input`\n  padding: 0.5em;\n  margin: 0.5em;\n  background-color: inherit;\n  border: 2px solid #333;\n  width: 300px;\n  font-size: 16px;\n  letter-spacing: 0.05em;\n\n  img {\n    cursor: pointer;\n  }\n\n  &::placeholder {\n    color: #333;\n  }\n`;\n\n/*const TaskName = styled.div`\n  flex-grow: 1;\n  margin: 0 20px;\n`;\n*/\n\nconst Button = styled.div`\n  background-color: #bebebe;\n  border: none;\n  border-radius: 3px;\n  padding: 5px 10px;\n  width: min-content;\n  color: white;\n  letter-spacing: 0.05em;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #F5727E;\n  }\n`;\n\nfunction TaskItem(props) {\n  const dispatch = useDispatch();\n\n  const [newTask, setnewTask] = useState(props.task.taskName);\n  \n  //setnewTask(props.task.taskName);\n  \n  const handleChange = (event) => {\n    setnewTask(event.target.value);\n  };\n\n  const finishChange = (event) => {\n    if(newTask===\"\"){\n      setnewTask(props.task.taskName);\n      window.alert('任務不可空白');\n      return;\n    }\n    dispatch(actions.editTask(props.task.idx,newTask));\n  }\n\n  return (\n    <Container>\n      <CheckBox\n        type=\"checkbox\"\n        checked={props.task.isCompleted}\n        onChange={() => dispatch(actions.toggleTask(props.task.idx))}\n      />\n      <Input\n        type=\"text\"\n        //placeholder={props.task.taskName}\n        value={newTask}\n        onChange={handleChange}\n        onBlur={finishChange}\n      />\n      <Button onClick={() => dispatch(actions.deleteTask(props.task.idx))}>\n        Delete\n      </Button>\n    </Container>\n  );\n}\n\nexport default TaskItem;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,KAAKC,OAAO,MAAM,kBAAkB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAGjC,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,KATID,SAAS;AAWf,MAAME,QAAQ,GAAGN,MAAM,CAACO,KAAK,CAACC,KAAK,CAAC;EAAEC,IAAI,EAAE;AAAW,CAAC,CAAE;AAC1D;AACA;AACA;AACA,CAAC;AAAC,MAJIH,QAAQ;AAMd,IAAII,KAAK,GAAGV,MAAM,CAACO,KAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA,MAlBIG,KAAK;AAwBT,MAAMC,MAAM,GAAGX,MAAM,CAACK,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAbIM,MAAM;AAeZ,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAMC,QAAQ,GAAGb,WAAW,EAAE;EAE9B,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAACU,KAAK,CAACI,IAAI,CAACC,QAAQ,CAAC;;EAE3D;;EAEA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,UAAU,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC9B,IAAGL,OAAO,KAAG,EAAE,EAAC;MACdC,UAAU,CAACH,KAAK,CAACI,IAAI,CAACC,QAAQ,CAAC;MAC/BM,MAAM,CAACC,KAAK,CAAC,QAAQ,CAAC;MACtB;IACF;IACAX,QAAQ,CAACZ,OAAO,CAACwB,QAAQ,CAACb,KAAK,CAACI,IAAI,CAACU,GAAG,EAACZ,OAAO,CAAC,CAAC;EACpD,CAAC;EAED,oBACE,QAAC,SAAS;IAAA,wBACR,QAAC,QAAQ;MACP,IAAI,EAAC,UAAU;MACf,OAAO,EAAEF,KAAK,CAACI,IAAI,CAACW,WAAY;MAChC,QAAQ,EAAE,MAAMd,QAAQ,CAACZ,OAAO,CAAC2B,UAAU,CAAChB,KAAK,CAACI,IAAI,CAACU,GAAG,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7D,eACF,QAAC,KAAK;MACJ,IAAI,EAAC;MACL;MAAA;MACA,KAAK,EAAEZ,OAAQ;MACf,QAAQ,EAAEI,YAAa;MACvB,MAAM,EAAEI;IAAa;MAAA;MAAA;MAAA;IAAA,QACrB,eACF,QAAC,MAAM;MAAC,OAAO,EAAE,MAAMT,QAAQ,CAACZ,OAAO,CAAC4B,UAAU,CAACjB,KAAK,CAACI,IAAI,CAACU,GAAG,CAAC,CAAE;MAAA,UAAC;IAErE;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACC;AAEhB;AAAC,GAvCQf,QAAQ;EAAA,QACEX,WAAW;AAAA;AAAA,MADrBW,QAAQ;AAyCjB,eAAeA,QAAQ;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}